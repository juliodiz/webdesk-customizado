name: Build WebDesk

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: "1.75"

jobs:
  build-windows:
    runs-on: windows-2022

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          target: x86_64-pc-windows-msvc
          override: true
          profile: minimal

      - name: Install vcpkg dependencies
        run: |
          $ErrorActionPreference = "Stop"
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          cd C:\vcpkg
          .\bootstrap-vcpkg.bat
          $env:VCPKG_ROOT = "C:\vcpkg"
          .\vcpkg install libvpx:x64-windows-static libyuv:x64-windows-static opus:x64-windows-static aom:x64-windows-static
        shell: pwsh

      - name: Build WebDesk
        run: |
          $env:VCPKG_ROOT = "C:\vcpkg"
          cargo build --release --features inline --target x86_64-pc-windows-msvc
        shell: pwsh

      - name: Rename executable
        run: |
          Copy-Item target\x86_64-pc-windows-msvc\release\rustdesk.exe WebDesk.exe
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: WebDesk-Windows-x64
          path: WebDesk.exe

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.81"
          target: ${{ matrix.arch }}-apple-darwin
          override: true
          profile: minimal

      - name: Install dependencies
        run: |
          brew install cmake pkg-config nasm yasm

      - name: Install vcpkg dependencies
        run: |
          git clone https://github.com/Microsoft/vcpkg.git ~/vcpkg
          cd ~/vcpkg
          ./bootstrap-vcpkg.sh
          export VCPKG_ROOT=~/vcpkg
          # Map Rust arch to vcpkg arch: x86_64->x64, aarch64->arm64
          VCPKG_ARCH="${{ matrix.arch }}"
          if [ "$VCPKG_ARCH" = "x86_64" ]; then
            VCPKG_ARCH="x64"
          elif [ "$VCPKG_ARCH" = "aarch64" ]; then
            VCPKG_ARCH="arm64"
          fi
          ./vcpkg install libvpx:${VCPKG_ARCH}-osx libyuv:${VCPKG_ARCH}-osx opus:${VCPKG_ARCH}-osx aom:${VCPKG_ARCH}-osx

      - name: Build WebDesk
        run: |
          export VCPKG_ROOT=~/vcpkg
          cargo build --release --target ${{ matrix.arch }}-apple-darwin

      - name: Create app bundle
        run: |
          mkdir -p WebDesk.app/Contents/MacOS
          mkdir -p WebDesk.app/Contents/Resources
          cp target/${{ matrix.arch }}-apple-darwin/release/rustdesk WebDesk.app/Contents/MacOS/WebDesk

          # Create icns from WebSpot logo
          mkdir -p WebDesk.iconset
          sips -z 16 16     res/icon.png --out WebDesk.iconset/icon_16x16.png
          sips -z 32 32     res/icon.png --out WebDesk.iconset/icon_16x16@2x.png
          sips -z 32 32     res/icon.png --out WebDesk.iconset/icon_32x32.png
          sips -z 64 64     res/icon.png --out WebDesk.iconset/icon_32x32@2x.png
          sips -z 128 128   res/icon.png --out WebDesk.iconset/icon_128x128.png
          sips -z 256 256   res/icon.png --out WebDesk.iconset/icon_128x128@2x.png
          sips -z 256 256   res/icon.png --out WebDesk.iconset/icon_256x256.png
          sips -z 512 512   res/icon.png --out WebDesk.iconset/icon_256x256@2x.png
          sips -z 512 512   res/icon.png --out WebDesk.iconset/icon_512x512.png
          cp res/icon.png WebDesk.iconset/icon_512x512@2x.png
          iconutil -c icns WebDesk.iconset -o WebDesk.app/Contents/Resources/AppIcon.icns

          cat > WebDesk.app/Contents/Info.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleExecutable</key>
              <string>WebDesk</string>
              <key>CFBundleIdentifier</key>
              <string>com.webspot.webdesk</string>
              <key>CFBundleName</key>
              <string>WebDesk</string>
              <key>CFBundleIconFile</key>
              <string>AppIcon</string>
              <key>CFBundleVersion</key>
              <string>1.4.0</string>
              <key>CFBundleShortVersionString</key>
              <string>1.4.0</string>
              <key>LSMinimumSystemVersion</key>
              <string>10.14</string>
          </dict>
          </plist>
          EOF

      - name: Create DMG
        run: |
          brew install create-dmg
          create-dmg \
            --volname "WebDesk" \
            --window-pos 200 120 \
            --window-size 600 300 \
            --icon-size 100 \
            --app-drop-link 450 120 \
            "WebDesk-${{ matrix.arch }}.dmg" \
            "WebDesk.app" || hdiutil create -volname WebDesk -srcfolder WebDesk.app -ov -format UDZO WebDesk-${{ matrix.arch }}.dmg

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: WebDesk-macOS-${{ matrix.arch }}
          path: WebDesk-${{ matrix.arch }}.dmg
